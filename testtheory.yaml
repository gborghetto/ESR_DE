theory:
  bkgd_solver.cobaya_interface.QuintessenceTheory:
    python_path: '.'
    stop_at_error: True
    params:
      rdrag: 
        'derived': True
likelihood:
  like_ombh2_BBN:
    external: "lambda _self: stats.norm.logpdf(_self.provider.get_param('ombh2'), loc=0.02218, scale=0.0006)"
    requires: ombh2
  bao.desi_dr2.desi_bao_all: null
  sn.union3: null
params:
  omk: 0.
  omch2: #1.181949983e-01
    latex: \Omega_\mathrm{c} h^2
    prior:
      min: 0.11
      max: 0.13
    ref:
      dist: norm
      loc: 0.1184
      scale: 0.01
    proposal: 0.0005
  ombh2: #2.228338732e-02 #0.02228
    prior:
      min: 0.021
      max: 0.023
    ref:
      dist: norm
      loc: 0.022633
      scale: 0.001
    proposal: 0.0001
    latex: \Omega_\mathrm{b} h^2
  H0: 
    latex: H_0
    prior:
      min: 55
      max: 75
    ref:
      dist: norm
      loc: 67.0
      scale: 0.2
    proposal: 0.05
  # mnu: 0.06
  # Example quintessence/theory parameters
  phi_init: 0.
  phidot_init: 0.0
  lambda_phi:
    prior:
      min: 0.001
      max: 2.0
    ref:
      dist: norm
      loc: 0.25
      scale: 0.1
    proposal: 0.05
    latex: \lambda_\phi
  chi2__BAO:
    latex: \chi^2_\mathrm{BAO}
    derived: true
  chi2__SN:
    latex: \chi^2_\mathrm{SN}
    derived: true
  chi2_total:
    derived: 'lambda chi2__BAO, chi2__SN: chi2__BAO + chi2__SN'
    latex: \chi^2_\mathrm{total}
  omegam:
    latex: \Omega_\mathrm{m}
    derived: "lambda omch2, ombh2, H0: (omch2 + ombh2) / (H0 / 100.0)**2"
  rdrag:
    latex: r_\mathrm{drag}
    derived: True
  hrd:
    latex: hr_d
    derived: 'lambda H0, rdrag: H0/100 * rdrag'
sampler:
  mcmc:
    drag: false
    oversample_power: 0.4
    proposal_scale: 1.9
    Rminus1_stop: 0.05
    Rminus1_cl_stop: 0.2
    max_tries: 100
    max_samples: 20000
  # polychord:
  #   nlive: 25d
  #   precision_criterion: 0.1
  #   maximise: True
# output: chains/spline_4_free_pchord
output: chains/test_solver_exp
